-- https://github.com/microsoft/vscode/blob/main/src/vs/base/common/codicons.ts
-- go to the above and then enter <c-v>u<unicode> and the symbold should appear
-- or go here and upload the font file: https://mathew-kurian.github.io/CharacterMap/
-- find more here: https://www.nerdfonts.com/cheat-sheet

-- Define nerd font icons
local nerd_icons = {
  kind = {
    Text = "",
    Method = "",
    Function = "",
    Constructor = "",
    Field = "",
    Variable = "",
    Class = "",
    Interface = "",
    Module = "",
    Property = "",
    Unit = "",
    Value = "",
    Enum = "",
    Keyword = "",
    Snippet = "",
    Color = "",
    File = "",
    Reference = "",
    Folder = "",
    EnumMember = "",
    Constant = "",
    Struct = "",
    Event = "",
    Operator = "",
    TypeParameter = "",
    Misc = "",
  },
  type = {
    Array = "",
    Number = "",
    String = "",
    Boolean = "âŠ¨",
    Object = "",
  },
  documents = {
    File = "",
    Files = "",
    Folder = "",
    OpenFolder = "",
  },
  git = {
    Add = "",
    Mod = "",
    Remove = "",
    Ignore = "",
    Rename = "",
    Diff = "",
    Repo = "",
    Octoface = "",
  },
  ui = {
    ArrowClosed = "",
    ArrowOpen = "",
    Lock = "",
    Circle = "",
    BigCircle = "",
    BigUnfilledCircle = "",
    Close = "",
    NewFile = "",
    Search = "",
    Lightbulb = "",
    Project = "",
    Dashboard = "",
    History = "",
    Comment = "",
    Bug = "",
    Code = "",
    Telescope = "",
    Gear = "",
    Package = "",
    List = "",
    SignIn = "",
    SignOut = "",
    NoteBook = "",
    Check = "",
    Fire = "",
    Note = "",
    BookMark = "",
    Pencil = "",
    ChevronRight = "",
    Table = "",
    Calendar = "",
    CloudDownload = "",
  },
  diagnostics = {
    Error = "",
    Warning = "",
    Information = "",
    Question = "",
    Hint = "",
  },
  misc = {
    Robot = "",
    Squirrel = "",
    Tag = "",
    Watch = "",
    Smiley = "",
    Package = "",
    CircuitBoard = "",
  },
}

-- Define ASCII fallback icons
local ascii_icons = {
  kind = {
    Text = "T",
    Method = "m",
    Function = "f",
    Constructor = "c",
    Field = "F",
    Variable = "v",
    Class = "C",
    Interface = "I",
    Module = "M",
    Property = "p",
    Unit = "u",
    Value = "V",
    Enum = "E",
    Keyword = "k",
    Snippet = "s",
    Color = "C",
    File = "f",
    Reference = "r",
    Folder = "d",
    EnumMember = "e",
    Constant = "c",
    Struct = "S",
    Event = "E",
    Operator = "o",
    TypeParameter = "t",
    Misc = "?",
  },
  type = {
    Array = "[]",
    Number = "#",
    String = "s",
    Boolean = "b",
    Object = "{}",
  },
  documents = {
    File = "f",
    Files = "F",
    Folder = "d",
    OpenFolder = "D",
  },
  git = {
    Add = "+",
    Mod = "~",
    Remove = "-",
    Ignore = "i",
    Rename = "r",
    Diff = "d",
    Repo = "R",
    Octoface = "G",
  },
  ui = {
    ArrowClosed = ">",
    ArrowOpen = "v",
    Lock = "L",
    Circle = "o",
    BigCircle = "O",
    BigUnfilledCircle = "o",
    Close = "x",
    NewFile = "n",
    Search = "?",
    Lightbulb = "!",
    Project = "P",
    Dashboard = "=",
    History = "h",
    Comment = "#",
    Bug = "b",
    Code = "<>",
    Telescope = "T",
    Gear = "g",
    Package = "p",
    List = "l",
    SignIn = "->",
    SignOut = "<-",
    NoteBook = "N",
    Check = "v",
    Fire = "f",
    Note = "n",
    BookMark = "B",
    Pencil = "p",
    ChevronRight = ">",
    Table = "t",
    Calendar = "c",
    CloudDownload = "D",
  },
  diagnostics = {
    Error = "E",
    Warning = "W",
    Information = "I",
    Question = "?",
    Hint = "H",
  },
  misc = {
    Robot = "R",
    Squirrel = "s",
    Tag = "t",
    Watch = "w",
    Smiley = ":)",
    Package = "p",
    CircuitBoard = "C",
  },
}

-- Return the appropriate icon set based on the flag
local function get_icons()
  if vim.g.enable_nerd_icons then
    return nerd_icons
  else
    return ascii_icons
  end
end

return get_icons()